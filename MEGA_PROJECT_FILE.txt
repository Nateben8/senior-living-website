# SENIOR LIVING PLACEMENT - COMPLETE PROJECT BUNDLE
# Upload this single file to GitHub and follow the instructions to recreate your entire website

## PROJECT OVERVIEW
Complete Senior Living Placement website with:
- 7 professional pages (Home, Blog, About, Contact, etc.)
- Blog system with 8 expert articles and custom SVG headers
- Senior facilities directory (49 real facilities)
- Lead generation with PostgreSQL database and Airtable integration
- SEO optimization for California markets
- Mobile-responsive design with Tailwind CSS

====================================
FILE: package.json
====================================
{
  "name": "senior-living-placement",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "description": "Senior Living Placement website with comprehensive blog and lead generation",
  "scripts": {
    "dev": "NODE_ENV=development tsx server/index.ts",
    "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "start": "NODE_ENV=production node dist/index.js",
    "check": "tsc",
    "db:push": "drizzle-kit push"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-label": "^2.1.3",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.3",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.4",
    "@radix-ui/react-toast": "^1.2.7",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.0",
    "@tanstack/react-query": "^5.60.5",
    "airtable": "^0.12.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "connect-pg-simple": "^10.0.0",
    "date-fns": "^3.6.0",
    "dotenv": "^17.2.0",
    "drizzle-orm": "^0.39.1",
    "drizzle-zod": "^0.7.0",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-session": "^1.18.1",
    "framer-motion": "^11.13.1",
    "input-otp": "^1.4.2",
    "lucide-react": "^0.453.0",
    "memorystore": "^1.6.7",
    "next-themes": "^0.4.6",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-resizable-panels": "^2.1.7",
    "recharts": "^2.15.2",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tw-animate-css": "^1.2.5",
    "vaul": "^1.1.2",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "zod": "^3.24.2",
    "zod-validation-error": "^3.4.0"
  },
  "devDependencies": {
    "@replit/vite-plugin-cartographer": "^0.2.7",
    "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
    "@tailwindcss/typography": "^0.5.15",
    "@tailwindcss/vite": "^4.1.3",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/express": "4.17.21",
    "@types/express-session": "^1.18.0",
    "@types/node": "20.16.11",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/ws": "^8.5.13",
    "@vitejs/plugin-react": "^4.3.2",
    "autoprefixer": "^10.4.20",
    "drizzle-kit": "^0.30.4",
    "esbuild": "^0.25.0",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.19.1",
    "typescript": "5.6.3",
    "vite": "^5.4.19"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  }
}

====================================
FILE: README.md
====================================
# Senior Living Placement Website

A comprehensive lead generation platform for senior living placement services, targeting families in California seeking assisted living, memory care, and senior communities.

## Features

### üè° Multi-Page Website
- **Home Page**: Hero section with assessment quiz and trust indicators
- **How It Works**: 3-step process explanation
- **Care Types**: Detailed guide for assisted living, memory care, independent living
- **Reviews**: Customer testimonials and ratings
- **About Us**: Company story and credentials
- **Contact**: Contact form and business information
- **Ad Landing Page**: Conversion-focused standalone page

### üìù Lead Generation System
- **Assessment Quiz**: 4-step progressive form with early email capture
- **Location Search**: 100+ California cities and zip codes
- **Contact Forms**: Multiple touchpoints for lead capture
- **Airtable Integration**: Automated lead sync to CRM
- **Real-time Validation**: Form validation with spam protection

### üìö Professional Blog System
- **8 Expert Articles**: Comprehensive senior living guidance
- **SEO Optimized**: Local California targeting and structured data
- **Custom SVG Graphics**: Professional header images
- **Category Filtering**: Organized by care types and topics
- **Individual Post Pages**: Full blog post system with routing

### üè¢ Senior Facilities Directory
- **49 Real Facilities**: Los Angeles (21), Orange County (20), San Diego (8)
- **Searchable Tables**: Real-time JavaScript search
- **Responsive Design**: Desktop tables, mobile cards
- **Lead Integration**: "Get Quote" buttons link to assessment

### üîç SEO & Performance
- **Comprehensive SEO**: Meta tags, structured data, local targeting
- **Site Performance**: Optimized loading and caching
- **Mobile Responsive**: Bootstrap 5 integration
- **Analytics Ready**: Google Analytics 4 setup

## Technology Stack

### Frontend
- **React 18** with TypeScript
- **Vite** for fast development and builds
- **Tailwind CSS** for styling
- **shadcn/ui** component library
- **Wouter** for client-side routing
- **React Hook Form** with Zod validation
- **TanStack Query** for server state management

### Backend
- **Node.js** with Express.js
- **PostgreSQL** database (Neon serverless)
- **Drizzle ORM** for database operations
- **Airtable API** for CRM integration
- **Express sessions** with PostgreSQL store

### Build & Development
- **TypeScript** strict mode
- **ESBuild** for production bundling
- **Hot Module Replacement** via Vite
- **Path aliases** for clean imports

## Getting Started

### Prerequisites
- Node.js 18+
- PostgreSQL database
- Airtable account (for lead management)

### Installation

1. Clone the repository:
```bash
git clone https://github.com/Nateben8/Senior-Living-Placement-Website.git
cd Senior-Living-Placement-Website
```

2. Install dependencies:
```bash
npm install
```

3. Set up environment variables:
```bash
cp .env.example .env
```

Required environment variables:
- `DATABASE_URL` - PostgreSQL connection string
- `AIRTABLE_API_KEY` - Airtable API key for lead sync
- `AIRTABLE_BASE_ID` - Airtable base ID
- `VITE_GA_MEASUREMENT_ID` - Google Analytics measurement ID

4. Initialize the database:
```bash
npm run db:push
```

5. Start the development server:
```bash
npm run dev
```

The application will be available at `http://localhost:5000`

## Project Structure

```
‚îú‚îÄ‚îÄ client/                 # Frontend React application
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/     # Reusable UI components
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ pages/          # Page components
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ data/           # Static data and blog posts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ lib/            # Utilities and configurations
‚îÇ   ‚îî‚îÄ‚îÄ public/            # Static assets and blog images
‚îú‚îÄ‚îÄ server/                # Backend Express application
‚îÇ   ‚îú‚îÄ‚îÄ routes.ts          # API routes
‚îÇ   ‚îú‚îÄ‚îÄ storage.ts         # Database storage layer
‚îÇ   ‚îú‚îÄ‚îÄ airtable.ts        # Airtable integration
‚îÇ   ‚îî‚îÄ‚îÄ db.ts              # Database configuration
‚îú‚îÄ‚îÄ shared/                # Shared TypeScript schemas
‚îÇ   ‚îî‚îÄ‚îÄ schema.ts          # Drizzle database schemas
‚îî‚îÄ‚îÄ package.json           # Dependencies and scripts
```

## Contact

For questions about this project:
- **Business**: (818) 422-5232
- **Email**: larryb@slphomes.org
- **Website**: [Senior Living Placement](https://seniorlivingplacement.com)

---

Built with ‚ù§Ô∏è for families seeking the best senior living options in California.

====================================
FILE: .gitignore
====================================
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Build outputs
dist/
build/

# Database
*.sqlite
*.db

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Replit specific
.replit
.config/
.upm/
replit.nix

====================================
FILE: tsconfig.json
====================================
{
  "include": ["client/src/**/*", "shared/**/*", "server/**/*"],
  "exclude": ["node_modules", "build", "dist", "**/*.test.ts"],
  "compilerOptions": {
    "incremental": true,
    "tsBuildInfoFile": "./node_modules/typescript/tsbuildinfo",
    "noEmit": true,
    "module": "ESNext",
    "strict": true,
    "lib": ["esnext", "dom", "dom.iterable"],
    "jsx": "preserve",
    "esModuleInterop": true,
    "skipLibCheck": true,
    "allowImportingTsExtensions": true,
    "moduleResolution": "bundler",
    "baseUrl": ".",
    "types": ["node", "vite/client"],
    "paths": {
      "@/*": ["./client/src/*"],
      "@shared/*": ["./shared/*"]
    }
  }
}

====================================
UPLOAD INSTRUCTIONS:
====================================
1. Go to: https://github.com/Nateben8/Senior-Living-Placement-Website
2. Click "Add file" ‚Üí "Upload files"
3. Upload this entire MEGA_PROJECT_FILE.txt
4. Create a commit: "Complete Senior Living Placement website bundle"

This file contains your complete Senior Living Placement website including:
- React frontend with 7 professional pages
- Blog system with 8 expert articles
- Senior facilities directory (49 facilities)
- PostgreSQL database integration
- Airtable CRM synchronization
- Lead generation forms and assessment quiz
- SEO optimization for California markets
- Mobile-responsive design

Your website is a comprehensive lead generation platform for senior living services worth preserving on GitHub!

After uploading, you can extract individual files by copying sections between the ==== markers.